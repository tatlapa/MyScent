{
  "version": 3,
  "sources": ["../../lodash-es/mapValues.js", "../../lodash-es/last.js", "../../lodash-es/_isIterateeCall.js", "../../lodash-es/defaults.js", "../../lodash-es/_baseSet.js", "../../lodash-es/_basePickBy.js", "../../lodash-es/_basePick.js", "../../lodash-es/flatten.js", "../../lodash-es/_flatRest.js", "../../lodash-es/pick.js", "../../lodash-es/_assignMergeValue.js", "../../lodash-es/isPlainObject.js", "../../lodash-es/_safeGet.js", "../../lodash-es/toPlainObject.js", "../../lodash-es/_baseMergeDeep.js", "../../lodash-es/_baseMerge.js", "../../lodash-es/_createAssigner.js", "../../lodash-es/merge.js", "../../lodash-es/uniqueId.js", "../../lodash-es/_baseRange.js", "../../lodash-es/_trimmedEndIndex.js", "../../lodash-es/_baseTrim.js", "../../lodash-es/toNumber.js", "../../lodash-es/toFinite.js", "../../lodash-es/_createRange.js", "../../lodash-es/range.js", "../../@unovis/dagre-layout/lib/data/list.js", "../../@unovis/dagre-layout/lib/greedy-fas.js", "../../@unovis/dagre-layout/lib/acyclic.js", "../../lodash-es/now.js", "../../lodash-es/_baseExtremum.js", "../../lodash-es/_baseGt.js", "../../lodash-es/max.js", "../../lodash-es/_baseLt.js", "../../lodash-es/min.js", "../../lodash-es/_baseZipObject.js", "../../lodash-es/zipObject.js", "../../@unovis/dagre-layout/lib/util.js", "../../@unovis/dagre-layout/lib/normalize.js", "../../@unovis/dagre-layout/lib/rank/util.js", "../../lodash-es/minBy.js", "../../@unovis/dagre-layout/lib/rank/feasible-tree.js", "../../lodash-es/_createFind.js", "../../lodash-es/toInteger.js", "../../lodash-es/findIndex.js", "../../lodash-es/find.js", "../../@unovis/dagre-layout/lib/rank/network-simplex.js", "../../@unovis/dagre-layout/lib/rank/index.js", "../../@unovis/dagre-layout/lib/parent-dummy-chains.js", "../../@unovis/dagre-layout/lib/nesting-graph.js", "../../@unovis/dagre-layout/lib/add-border-segments.js", "../../@unovis/dagre-layout/lib/coordinate-system.js", "../../lodash-es/cloneDeep.js", "../../lodash-es/_baseSortBy.js", "../../lodash-es/_compareAscending.js", "../../lodash-es/_compareMultiple.js", "../../lodash-es/_baseOrderBy.js", "../../lodash-es/sortBy.js", "../../@unovis/dagre-layout/lib/order/init-order.js", "../../@unovis/dagre-layout/lib/order/cross-count.js", "../../@unovis/dagre-layout/lib/order/barycenter.js", "../../@unovis/dagre-layout/lib/order/resolve-conflicts.js", "../../@unovis/dagre-layout/lib/order/sort.js", "../../@unovis/dagre-layout/lib/order/sort-subgraph.js", "../../@unovis/dagre-layout/lib/order/build-layer-graph.js", "../../@unovis/dagre-layout/lib/order/add-subgraph-constraints.js", "../../@unovis/dagre-layout/lib/order/index.js", "../../lodash-es/_metaMap.js", "../../lodash-es/_baseSetData.js", "../../lodash-es/_createCtor.js", "../../lodash-es/_createBind.js", "../../lodash-es/_composeArgs.js", "../../lodash-es/_composeArgsRight.js", "../../lodash-es/_countHolders.js", "../../lodash-es/_baseLodash.js", "../../lodash-es/_LazyWrapper.js", "../../lodash-es/_getData.js", "../../lodash-es/_realNames.js", "../../lodash-es/_getFuncName.js", "../../lodash-es/_LodashWrapper.js", "../../lodash-es/_wrapperClone.js", "../../lodash-es/wrapperLodash.js", "../../lodash-es/_isLaziable.js", "../../lodash-es/_setData.js", "../../lodash-es/_getWrapDetails.js", "../../lodash-es/_insertWrapDetails.js", "../../lodash-es/_updateWrapDetails.js", "../../lodash-es/_setWrapToString.js", "../../lodash-es/_createRecurry.js", "../../lodash-es/_getHolder.js", "../../lodash-es/_reorder.js", "../../lodash-es/_replaceHolders.js", "../../lodash-es/_createHybrid.js", "../../lodash-es/_createCurry.js", "../../lodash-es/_createPartial.js", "../../lodash-es/_mergeData.js", "../../lodash-es/_createWrap.js", "../../lodash-es/bind.js", "../../lodash-es/maxBy.js", "../../lodash-es/_baseToPairs.js", "../../lodash-es/_setToPairs.js", "../../lodash-es/_createToPairs.js", "../../lodash-es/toPairs.js", "../../@unovis/dagre-layout/lib/position/bk.js", "../../@unovis/dagre-layout/lib/position/index.js", "../../@unovis/dagre-layout/lib/layout.js", "../../@unovis/dagre-layout/lib/index.js"],
  "sourcesContent": ["import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n", "import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n", "import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n", "import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n", "import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n", "import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n", "import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n", "import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n", "import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n", "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n", "import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n", "import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n", "import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n", "import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n", "import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n", "import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n", "import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n", "import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n", "import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n", "import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n", "/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\nfunction List () {\n  const sentinel = {}\n  sentinel._next = sentinel._prev = sentinel\n  this._sentinel = sentinel\n}\n\nList.prototype.dequeue = function () {\n  const sentinel = this._sentinel\n  const entry = sentinel._prev\n\n  if (entry !== sentinel) {\n    unlink(entry)\n    return entry\n  }\n}\n\nList.prototype.enqueue = function (entry) {\n  const sentinel = this._sentinel\n\n  if (entry._prev && entry._next) {\n    unlink(entry)\n  }\n\n  entry._next = sentinel._next\n  sentinel._next._prev = entry\n  sentinel._next = entry\n  entry._prev = sentinel\n}\n\nList.prototype.toString = function () {\n  const strs = []\n  const sentinel = this._sentinel\n  let curr = sentinel._prev\n\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks))\n    curr = curr._prev\n  }\n\n  return '[' + strs.join(', ') + ']'\n}\n\nfunction unlink (entry) {\n  entry._prev._next = entry._next\n  entry._next._prev = entry._prev\n  delete entry._next\n  delete entry._prev\n}\n\nfunction filterOutLinks (k, v) {\n  if (k !== '_next' && k !== '_prev') {\n    return v\n  }\n}\n\nexport default List\n", "import _range from 'lodash-es/range'\nimport _forEach from 'lodash-es/forEach'\nimport _map from 'lodash-es/map'\nimport _flatten from 'lodash-es/flatten'\nimport _constant from 'lodash-es/constant'\nimport { Graph } from '@unovis/graphlibrary'\nimport List from './data/list'\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\n\nconst DEFAULT_WEIGHT_FN = _constant(1)\n\nfunction greedyFAS (g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return []\n  }\n\n  const state = buildState(g, weightFn || DEFAULT_WEIGHT_FN)\n  const results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx) // Expand multi-edges\n\n  return _flatten(_map(results, function (e) {\n    return g.outEdges(e.v, e.w)\n  }), true)\n}\n\nfunction doGreedyFAS (g, buckets, zeroIdx) {\n  let results = []\n  const sources = buckets[buckets.length - 1]\n  const sinks = buckets[0]\n  let entry\n\n  while (g.nodeCount()) {\n    while ((entry = sinks.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry)\n    }\n\n    while ((entry = sources.dequeue())) {\n      removeNode(g, buckets, zeroIdx, entry)\n    }\n\n    if (g.nodeCount()) {\n      for (let i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue()\n\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true))\n          break\n        }\n      }\n    }\n  }\n\n  return results\n}\n\nfunction removeNode (g, buckets, zeroIdx, entry, collectPredecessors) {\n  const results = collectPredecessors ? [] : undefined\n\n  _forEach(g.inEdges(entry.v), function (edge) {\n    const weight = g.edge(edge)\n    const uEntry = g.node(edge.v)\n\n    if (collectPredecessors) {\n      results.push({\n        v: edge.v,\n        w: edge.w\n      })\n    }\n\n    uEntry.out -= weight\n    assignBucket(buckets, zeroIdx, uEntry)\n  })\n\n  _forEach(g.outEdges(entry.v), function (edge) {\n    const weight = g.edge(edge)\n    const w = edge.w\n    const wEntry = g.node(w)\n    wEntry['in'] -= weight\n    assignBucket(buckets, zeroIdx, wEntry)\n  })\n\n  g.removeNode(entry.v)\n  return results\n}\n\nfunction buildState (g, weightFn) {\n  const fasGraph = new Graph()\n  let maxIn = 0\n  let maxOut = 0\n\n  _forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, {\n      v: v,\n      'in': 0,\n      out: 0\n    })\n  }) // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n\n  _forEach(g.edges(), function (e) {\n    const prevWeight = fasGraph.edge(e.v, e.w) || 0\n    const weight = weightFn(e)\n    const edgeWeight = prevWeight + weight\n    fasGraph.setEdge(e.v, e.w, edgeWeight)\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight)\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)['in'] += weight)\n  })\n\n  const buckets = _range(maxOut + maxIn + 3).map(function () {\n    return new List()\n  })\n\n  const zeroIdx = maxIn + 1\n\n  _forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v))\n  })\n\n  return {\n    graph: fasGraph,\n    buckets: buckets,\n    zeroIdx: zeroIdx\n  }\n}\n\nfunction assignBucket (buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry)\n  } else if (!entry['in']) {\n    buckets[buckets.length - 1].enqueue(entry)\n  } else {\n    buckets[entry.out - entry['in'] + zeroIdx].enqueue(entry)\n  }\n}\n\nexport default greedyFAS\n", "import _has from 'lodash-es/has'\nimport _uniqueId from 'lodash-es/uniqueId'\nimport _forEach from 'lodash-es/forEach'\nimport greedyFAS from './greedy-fas'\n\nfunction run (g) {\n  const fas = g.graph().acyclicer === 'greedy' ? greedyFAS(g, weightFn(g)) : dfsFAS(g)\n\n  _forEach(fas, function (e) {\n    const label = g.edge(e)\n    g.removeEdge(e)\n    label.forwardName = e.name\n    label.reversed = true\n    g.setEdge(e.w, e.v, label, _uniqueId('rev'))\n  })\n\n  function weightFn (g) {\n    return function (e) {\n      return g.edge(e).weight\n    }\n  }\n}\n\nfunction dfsFAS (g) {\n  const fas = []\n  const stack = {}\n  const visited = {}\n\n  function dfs (v) {\n    if (_has(visited, v)) {\n      return\n    }\n\n    visited[v] = true\n    stack[v] = true\n\n    _forEach(g.outEdges(v), function (e) {\n      if (_has(stack, e.w)) {\n        fas.push(e)\n      } else {\n        dfs(e.w)\n      }\n    })\n\n    delete stack[v]\n  }\n\n  _forEach(g.nodes(), dfs)\n\n  return fas\n}\n\nfunction undo (g) {\n  _forEach(g.edges(), function (e) {\n    const label = g.edge(e)\n\n    if (label.reversed) {\n      g.removeEdge(e)\n      const forwardName = label.forwardName\n      delete label.reversed\n      delete label.forwardName\n      g.setEdge(e.w, e.v, label, forwardName)\n    }\n  })\n}\n\nexport default {\n  run,\n  undo\n}\n", "import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n", "import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n", "/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n", "/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n", "/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n", "import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n", "import _now from 'lodash-es/now'\nimport _max from 'lodash-es/max'\nimport _has from 'lodash-es/has'\nimport _min from 'lodash-es/min'\nimport _isUndefined from 'lodash-es/isUndefined'\nimport _range from 'lodash-es/range'\nimport _zipObject from 'lodash-es/zipObject'\nimport _map from 'lodash-es/map'\nimport _forEach from 'lodash-es/forEach'\nimport _uniqueId from 'lodash-es/uniqueId'\nimport { Graph } from '@unovis/graphlibrary'\n/*\n * Adds a dummy node to the graph and return v.\n */\n\nexport function addDummyNode (g, type, attrs, name) {\n  let v\n\n  do {\n    v = _uniqueId(name)\n  } while (g.hasNode(v))\n\n  attrs.dummy = type\n  g.setNode(v, attrs)\n  return v\n}\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\n\nexport function simplify (g) {\n  const simplified = new Graph().setGraph(g.graph())\n\n  _forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v))\n  })\n\n  _forEach(g.edges(), function (e) {\n    const simpleLabel = simplified.edge(e.v, e.w) || {\n      weight: 0,\n      minlen: 1\n    }\n    const label = g.edge(e)\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    })\n  })\n\n  return simplified\n}\nexport function asNonCompoundGraph (g) {\n  const simplified = new Graph({\n    multigraph: g.isMultigraph()\n  }).setGraph(g.graph())\n\n  _forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v))\n    }\n  })\n\n  _forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e))\n  })\n\n  return simplified\n}\nexport function successorWeights (g) {\n  const weightMap = _map(g.nodes(), function (v) {\n    const sucs = {}\n\n    _forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight\n    })\n\n    return sucs\n  })\n\n  return _zipObject(g.nodes(), weightMap)\n}\nexport function predecessorWeights (g) {\n  const weightMap = _map(g.nodes(), function (v) {\n    const preds = {}\n\n    _forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight\n    })\n\n    return preds\n  })\n\n  return _zipObject(g.nodes(), weightMap)\n}\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\n\nexport function intersectRect (rect, point) {\n  const x = rect.x\n  const y = rect.y // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\n  const dx = point.x - x\n  const dy = point.y - y\n  let w = rect.width / 2\n  let h = rect.height / 2\n\n  if (!dx && !dy) {\n    throw new Error('Not possible to find intersection inside of the rectangle')\n  }\n\n  let sx\n  let sy\n\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h\n    }\n\n    sx = h * dx / dy\n    sy = h\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w\n    }\n\n    sx = w\n    sy = w * dy / dx\n  }\n\n  return {\n    x: x + sx,\n    y: y + sy\n  }\n}\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\n\nexport function buildLayerMatrix (g) {\n  const layering = _map(_range(maxRank(g) + 1), function () {\n    return []\n  })\n\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n    const rank = node.rank\n\n    if (!_isUndefined(rank)) {\n      layering[rank][node.order] = v\n    }\n  })\n\n  return layering\n}\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\n\nexport function normalizeRanks (g) {\n  const min = _min(_map(g.nodes(), function (v) {\n    return g.node(v).rank\n  }))\n\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n\n    if (_has(node, 'rank')) {\n      node.rank -= min\n    }\n  })\n}\nexport function removeEmptyRanks (g) {\n  // Ranks may not start at 0, so we need to offset them\n  const offset = _min(_map(g.nodes(), function (v) {\n    return g.node(v).rank\n  }))\n\n  const layers = []\n\n  _forEach(g.nodes(), function (v) {\n    const rank = g.node(v).rank - offset\n\n    if (!layers[rank]) {\n      layers[rank] = []\n    }\n\n    layers[rank].push(v)\n  })\n\n  let delta = 0\n  const nodeRankFactor = g.graph().nodeRankFactor\n\n  _forEach(layers, function (vs, i) {\n    if (_isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta\n    } else if (delta) {\n      _forEach(vs, function (v) {\n        g.node(v).rank += delta\n      })\n    }\n  })\n}\nexport function addBorderNode (g, prefix, rank, order) {\n  const node = {\n    width: 0,\n    height: 0\n  }\n\n  if (arguments.length >= 4) {\n    node.rank = rank\n    node.order = order\n  }\n\n  return addDummyNode(g, 'border', node, prefix)\n}\nexport function maxRank (g) {\n  return _max(_map(g.nodes(), function (v) {\n    const rank = g.node(v).rank\n\n    if (!_isUndefined(rank)) {\n      return rank\n    }\n  }))\n}\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\n\nexport function partition (collection, fn) {\n  const result = {\n    lhs: [],\n    rhs: []\n  }\n\n  _forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value)\n    } else {\n      result.rhs.push(value)\n    }\n  })\n\n  return result\n}\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\n\nexport function time (name, fn) {\n  const start = _now()\n\n  try {\n    return fn()\n  } finally {\n    console.log(name + ' time: ' + (_now() - start) + 'ms')\n  }\n}\nexport function notime (name, fn) {\n  return fn()\n}\nexport default {\n  addDummyNode,\n  simplify,\n  asNonCompoundGraph,\n  successorWeights,\n  predecessorWeights,\n  intersectRect,\n  buildLayerMatrix,\n  normalizeRanks,\n  removeEmptyRanks,\n  addBorderNode,\n  maxRank,\n  partition,\n  time,\n  notime\n}\n", "import _forEach from 'lodash-es/forEach'\nimport util from './util'\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\n\nfunction run (g) {\n  g.graph().dummyChains = []\n\n  _forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge)\n  })\n}\n\nfunction normalizeEdge (g, e) {\n  let v = e.v\n  let vRank = g.node(v).rank\n  const w = e.w\n  const wRank = g.node(w).rank\n  const name = e.name\n  const edgeLabel = g.edge(e)\n  const labelRank = edgeLabel.labelRank\n  if (wRank === vRank + 1) return\n  g.removeEdge(e)\n  let dummy\n  let attrs\n  let i\n\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = []\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    }\n    dummy = util.addDummyNode(g, 'edge', attrs, '_d')\n\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width\n      attrs.height = edgeLabel.height\n      attrs.dummy = 'edge-label'\n      attrs.labelpos = edgeLabel.labelpos\n    }\n\n    g.setEdge(v, dummy, {\n      weight: edgeLabel.weight\n    }, name)\n\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy)\n    }\n\n    v = dummy\n  }\n\n  g.setEdge(v, w, {\n    weight: edgeLabel.weight\n  }, name)\n}\n\nfunction undo (g) {\n  _forEach(g.graph().dummyChains, function (v) {\n    let node = g.node(v)\n    const origLabel = node.edgeLabel\n    let w = null\n    g.setEdge(node.edgeObj, origLabel)\n\n    while (node.dummy) {\n      w = g.successors(v)[0]\n      g.removeNode(v)\n      origLabel.points.push({\n        x: node.x,\n        y: node.y\n      })\n\n      if (node.dummy === 'edge-label') {\n        origLabel.x = node.x\n        origLabel.y = node.y\n        origLabel.width = node.width\n        origLabel.height = node.height\n      }\n\n      v = w\n      node = g.node(v)\n    }\n  })\n}\n\nexport default {\n  run,\n  undo\n}\n", "import _forEach from 'lodash-es/forEach'\nimport _map from 'lodash-es/map'\nimport _min from 'lodash-es/min'\nimport _has from 'lodash-es/has'\n\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\nexport function longestPath (g) {\n  const visited = {}\n\n  function dfs (v) {\n    const label = g.node(v)\n\n    if (_has(visited, v)) {\n      return label.rank\n    }\n\n    visited[v] = true\n    const rank = _min(_map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen\n    })) || 0\n    return (label.rank = rank)\n  }\n\n  _forEach(g.sources(), dfs)\n}\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\n\nexport function slack (g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen\n}\nexport default {\n  longestPath: longestPath,\n  slack: slack\n}\n", "import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n", "import _minBy from 'lodash-es/minBy'\nimport _forEach from 'lodash-es/forEach'\nimport { Graph } from '@unovis/graphlibrary'\nimport { slack } from './util'\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\n\nfunction feasibleTree (g) {\n  const t = new Graph({\n    directed: false\n  }) // Choose arbitrary node from which to start our tree\n\n  const start = g.nodes()[0]\n  const size = g.nodeCount()\n  t.setNode(start, {})\n  let edge\n  let delta\n\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g)\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge)\n    shiftRanks(t, g, delta)\n  }\n\n  return t\n}\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\n\nfunction tightTree (t, g) {\n  function dfs (v) {\n    _forEach(g.nodeEdges(v), function (e) {\n      const edgeV = e.v\n      const w = v === edgeV ? e.w : edgeV\n\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {})\n        t.setEdge(v, w, {})\n        dfs(w)\n      }\n    })\n  }\n\n  _forEach(t.nodes(), dfs)\n\n  return t.nodeCount()\n}\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\n\nfunction findMinSlackEdge (t, g) {\n  return _minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e)\n    }\n  })\n}\n\nfunction shiftRanks (t, g, delta) {\n  _forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta\n  })\n}\n\nexport default feasibleTree\n", "import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n", "import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n", "import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n", "import _minBy from 'lodash-es/minBy'\nimport _filter from 'lodash-es/filter'\nimport _find from 'lodash-es/find'\nimport _has from 'lodash-es/has'\nimport _forEach from 'lodash-es/forEach'\nimport { alg } from '@unovis/graphlibrary'\nimport feasibleTree from './feasible-tree'\nimport { slack, longestPath as initRank } from './util'\nimport { simplify } from '../util'\nconst {\n  preorder,\n  postorder\n} = alg // Expose some internals for testing purposes\n\nnetworkSimplex.initLowLimValues = initLowLimValues\nnetworkSimplex.initCutValues = initCutValues\nnetworkSimplex.calcCutValue = calcCutValue\nnetworkSimplex.leaveEdge = leaveEdge\nnetworkSimplex.enterEdge = enterEdge\nnetworkSimplex.exchangeEdges = exchangeEdges\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\n\nfunction networkSimplex (g) {\n  g = simplify(g)\n  initRank(g)\n  const t = feasibleTree(g)\n  initLowLimValues(t)\n  initCutValues(t, g)\n  let e\n  let f\n\n  while ((e = leaveEdge(t))) {\n    f = enterEdge(t, g, e)\n    exchangeEdges(t, g, e, f)\n  }\n}\n/*\n * Initializes cut values for all edges in the tree.\n */\n\nfunction initCutValues (t, g) {\n  let vs = postorder(t, t.nodes())\n  vs = vs.slice(0, vs.length - 1)\n\n  _forEach(vs, function (v) {\n    assignCutValue(t, g, v)\n  })\n}\n\nfunction assignCutValue (t, g, child) {\n  const childLab = t.node(child)\n  const parent = childLab.parent\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child)\n}\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\n\nfunction calcCutValue (t, g, child) {\n  const childLab = t.node(child)\n  const parent = childLab.parent // True if the child is on the tail end of the edge in the directed graph\n\n  let childIsTail = true // The graph's view of the tree edge we're inspecting\n\n  let graphEdge = g.edge(child, parent) // The accumulated cut value for the edge between this node and its parent\n\n  let cutValue = 0\n\n  if (!graphEdge) {\n    childIsTail = false\n    graphEdge = g.edge(parent, child)\n  }\n\n  cutValue = graphEdge.weight\n\n  _forEach(g.nodeEdges(child), function (e) {\n    const isOutEdge = e.v === child\n    const other = isOutEdge ? e.w : e.v\n\n    if (other !== parent) {\n      const pointsToHead = isOutEdge === childIsTail\n      const otherWeight = g.edge(e).weight\n      cutValue += pointsToHead ? otherWeight : -otherWeight\n\n      if (isTreeEdge(t, child, other)) {\n        const otherCutValue = t.edge(child, other).cutvalue\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue\n      }\n    }\n  })\n\n  return cutValue\n}\n\nfunction initLowLimValues (tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0]\n  }\n\n  dfsAssignLowLim(tree, {}, 1, root)\n}\n\nfunction dfsAssignLowLim (tree, visited, nextLim, v, parent) {\n  const low = nextLim\n  const label = tree.node(v)\n  visited[v] = true\n\n  _forEach(tree.neighbors(v), function (w) {\n    if (!_has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v)\n    }\n  })\n\n  label.low = low\n  label.lim = nextLim++\n\n  if (parent) {\n    label.parent = parent\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent\n  }\n\n  return nextLim\n}\n\nfunction leaveEdge (tree) {\n  return _find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0\n  })\n}\n\nfunction enterEdge (t, g, edge) {\n  let v = edge.v\n  let w = edge.w // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n\n  if (!g.hasEdge(v, w)) {\n    v = edge.w\n    w = edge.v\n  }\n\n  const vLabel = t.node(v)\n  const wLabel = t.node(w)\n  let tailLabel = vLabel\n  let flip = false // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel\n    flip = true\n  }\n\n  const candidates = _filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel)\n  })\n\n  return _minBy(candidates, function (edge) {\n    return slack(g, edge)\n  })\n}\n\nfunction exchangeEdges (t, g, e, f) {\n  const v = e.v\n  const w = e.w\n  t.removeEdge(v, w)\n  t.setEdge(f.v, f.w, {})\n  initLowLimValues(t)\n  initCutValues(t, g)\n  updateRanks(t, g)\n}\n\nfunction updateRanks (t, g) {\n  const root = _find(t.nodes(), function (v) {\n    return !g.node(v).parent\n  })\n\n  let vs = preorder(t, root)\n  vs = vs.slice(1)\n\n  _forEach(vs, function (v) {\n    const parent = t.node(v).parent\n    let edge = g.edge(v, parent)\n    let flipped = false\n\n    if (!edge) {\n      edge = g.edge(parent, v)\n      flipped = true\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen)\n  })\n}\n/*\n * Returns true if the edge is in the tree.\n */\n\nfunction isTreeEdge (tree, u, v) {\n  return tree.hasEdge(u, v)\n}\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\n\nfunction isDescendant (tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim\n}\n\nexport default networkSimplex\n", "import { longestPath } from './util'\nimport feasibleTree from './feasible-tree'\nimport networkSimplex from './network-simplex'\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\n\nfunction rank (g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g)\n      break\n\n    case 'tight-tree':\n      tightTreeRanker(g)\n      break\n\n    case 'longest-path':\n      longestPathRanker(g)\n      break\n\n    default:\n      networkSimplexRanker(g)\n  }\n} // A fast and simple ranker, but results are far from optimal.\n\nconst longestPathRanker = longestPath\n\nfunction tightTreeRanker (g) {\n  longestPath(g)\n  feasibleTree(g)\n}\n\nfunction networkSimplexRanker (g) {\n  networkSimplex(g)\n}\n\nexport default rank\n", "import _forEach from 'lodash-es/forEach'\n\nfunction parentDummyChains (g) {\n  const postorderNums = postorder(g)\n\n  _forEach(g.graph().dummyChains, function (v) {\n    let node = g.node(v)\n    const edgeObj = node.edgeObj\n    const pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w)\n    const path = pathData.path\n    const lca = pathData.lca\n    let pathIdx = 0\n    let pathV = path[pathIdx]\n    let ascending = true\n\n    while (v !== edgeObj.w) {\n      node = g.node(v)\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++\n        }\n\n        if (pathV === lca) {\n          ascending = false\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++\n        }\n\n        pathV = path[pathIdx]\n      }\n\n      g.setParent(v, pathV)\n      v = g.successors(v)[0]\n    }\n  })\n} // Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\n\nfunction findPath (g, postorderNums, v, w) {\n  const vPath = []\n  const wPath = []\n  const low = Math.min(postorderNums[v].low, postorderNums[w].low)\n  const lim = Math.max(postorderNums[v].lim, postorderNums[w].lim)\n  let parent\n  let lca // Traverse up from v to find the LCA\n\n  parent = v\n\n  do {\n    parent = g.parent(parent)\n    vPath.push(parent)\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim))\n\n  lca = parent // Traverse from w to LCA\n\n  parent = w\n\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent)\n  }\n\n  return {\n    path: vPath.concat(wPath.reverse()),\n    lca: lca\n  }\n}\n\nfunction postorder (g) {\n  const result = {}\n  let lim = 0\n\n  function dfs (v) {\n    const low = lim\n\n    _forEach(g.children(v), dfs)\n\n    result[v] = {\n      low: low,\n      lim: lim++\n    }\n  }\n\n  _forEach(g.children(), dfs)\n\n  return result\n}\n\nexport default parentDummyChains\n", "import _reduce from 'lodash-es/reduce'\nimport _forEach from 'lodash-es/forEach'\nimport _values from 'lodash-es/values'\nimport _max from 'lodash-es/max'\nimport util from './util'\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\n\nfunction run (g) {\n  const root = util.addDummyNode(g, 'root', {}, '_root')\n  const depths = treeDepths(g)\n  const height = _max(_values(depths)) - 1\n  const nodeSep = 2 * height + 1\n  g.graph().nestingRoot = root // Multiply minlen by nodeSep to align nodes on non-border ranks.\n\n  _forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep\n  }) // Calculate a weight that is sufficient to keep subgraphs vertically compact\n\n  const weight = sumWeights(g) + 1 // Create border nodes and link them up\n\n  _forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child)\n  }) // Save the multiplier for node layers for later removal of empty border\n  // layers.\n\n  g.graph().nodeRankFactor = nodeSep\n}\n\nfunction dfs (g, root, nodeSep, weight, height, depths, v) {\n  const children = g.children(v)\n\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, {\n        weight: 0,\n        minlen: nodeSep\n      })\n    }\n\n    return\n  }\n\n  const top = util.addBorderNode(g, '_bt')\n  const bottom = util.addBorderNode(g, '_bb')\n  const label = g.node(v)\n  g.setParent(top, v)\n  label.borderTop = top\n  g.setParent(bottom, v)\n  label.borderBottom = bottom\n\n  _forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child)\n    const childNode = g.node(child)\n    const childTop = childNode.borderTop ? childNode.borderTop : child\n    const childBottom = childNode.borderBottom ? childNode.borderBottom : child\n    const thisWeight = childNode.borderTop ? weight : 2 * weight\n    const minlen = childTop !== childBottom ? 1 : height - depths[v] + 1\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    })\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    })\n  })\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, {\n      weight: 0,\n      minlen: height + depths[v]\n    })\n  }\n}\n\nfunction treeDepths (g) {\n  const depths = {}\n\n  function dfs (v, depth) {\n    const children = g.children(v)\n\n    if (children && children.length) {\n      _forEach(children, function (child) {\n        dfs(child, depth + 1)\n      })\n    }\n\n    depths[v] = depth\n  }\n\n  _forEach(g.children(), function (v) {\n    dfs(v, 1)\n  })\n\n  return depths\n}\n\nfunction sumWeights (g) {\n  return _reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight\n  }, 0)\n}\n\nfunction cleanup (g) {\n  const graphLabel = g.graph()\n  g.removeNode(graphLabel.nestingRoot)\n  delete graphLabel.nestingRoot\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    if (edge.nestingEdge) {\n      g.removeEdge(e)\n    }\n  })\n}\n\nexport default {\n  run,\n  cleanup\n}\n", "import _has from 'lodash-es/has'\nimport _forEach from 'lodash-es/forEach'\nimport util from './util'\n\nfunction addBorderSegments (g) {\n  function dfs (v) {\n    const children = g.children(v)\n    const node = g.node(v)\n\n    if (children.length) {\n      _forEach(children, dfs)\n    }\n\n    if (_has(node, 'minRank')) {\n      node.borderLeft = []\n      node.borderRight = []\n\n      for (let rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, 'borderLeft', '_bl', v, node, rank)\n        addBorderNode(g, 'borderRight', '_br', v, node, rank)\n      }\n    }\n  }\n\n  _forEach(g.children(), dfs)\n}\n\nfunction addBorderNode (g, prop, prefix, sg, sgNode, rank) {\n  const label = {\n    width: 0,\n    height: 0,\n    rank: rank,\n    borderType: prop\n  }\n  const prev = sgNode[prop][rank - 1]\n  const curr = util.addDummyNode(g, 'border', label, prefix)\n  sgNode[prop][rank] = curr\n  g.setParent(curr, sg)\n\n  if (prev) {\n    g.setEdge(prev, curr, {\n      weight: 1\n    })\n  }\n}\n\nexport default addBorderSegments\n", "import _has from 'lodash-es/has'\nimport _forEach from 'lodash-es/forEach'\n\nfunction adjust (g) {\n  const rankDir = g.graph().rankdir.toLowerCase()\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapWidthHeight(g)\n  }\n}\n\nfunction undo (g) {\n  const rankDir = g.graph().rankdir.toLowerCase()\n\n  if (rankDir === 'bt' || rankDir === 'rl') {\n    reverseY(g)\n  }\n\n  if (rankDir === 'lr' || rankDir === 'rl') {\n    swapXY(g)\n    swapWidthHeight(g)\n  }\n}\n\nfunction swapWidthHeight (g) {\n  _forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v))\n  })\n\n  _forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e))\n  })\n}\n\nfunction swapWidthHeightOne (attrs) {\n  const w = attrs.width\n  attrs.width = attrs.height\n  attrs.height = w\n}\n\nfunction reverseY (g) {\n  _forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v))\n  })\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    _forEach(edge.points, reverseYOne)\n\n    if (_has(edge, 'y')) {\n      reverseYOne(edge)\n    }\n  })\n}\n\nfunction reverseYOne (attrs) {\n  attrs.y = -attrs.y\n}\n\nfunction swapXY (g) {\n  _forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v))\n  })\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    _forEach(edge.points, swapXYOne)\n\n    if (_has(edge, 'x')) {\n      swapXYOne(edge)\n    }\n  })\n}\n\nfunction swapXYOne (attrs) {\n  const x = attrs.x\n  attrs.x = attrs.y\n  attrs.y = x\n}\n\nexport default {\n  adjust,\n  undo\n}\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n", "import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n", "import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n", "import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n", "import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n", "import _sortBy from 'lodash-es/sortBy'\nimport _forEach from 'lodash-es/forEach'\nimport _has from 'lodash-es/has'\nimport _range from 'lodash-es/range'\nimport _map from 'lodash-es/map'\nimport _max from 'lodash-es/max'\nimport _filter from 'lodash-es/filter'\n\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\nfunction initOrder (g) {\n  const visited = {}\n\n  const simpleNodes = _filter(g.nodes(), function (v) {\n    return !g.children(v).length\n  })\n\n  const maxRank = _max(_map(simpleNodes, function (v) {\n    return g.node(v).rank\n  }))\n\n  const layers = _map(_range(maxRank + 1), function () {\n    return []\n  })\n\n  function dfs (v) {\n    if (_has(visited, v)) return\n    visited[v] = true\n    const node = g.node(v)\n    layers[node.rank].push(v)\n\n    _forEach(g.successors(v), dfs)\n  }\n\n  const orderedVs = _sortBy(simpleNodes, function (v) {\n    return g.node(v).rank\n  })\n\n  _forEach(orderedVs, dfs)\n\n  return layers\n}\n\nexport default initOrder\n", "import _forEach from 'lodash-es/forEach'\nimport _sortBy from 'lodash-es/sortBy'\nimport _flatten from 'lodash-es/flatten'\nimport _map from 'lodash-es/map'\nimport _zipObject from 'lodash-es/zipObject'\n\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\nfunction crossCount (g, layering) {\n  let cc = 0\n\n  for (let i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i])\n  }\n\n  return cc\n}\n\nfunction twoLayerCrossCount (g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  const southPos = _zipObject(southLayer, _map(southLayer, function (v, i) {\n    return i\n  }))\n\n  const southEntries = _flatten(_map(northLayer, function (v) {\n    const outEdges = g.outEdges(v)\n\n    const pos = _map(outEdges, e => ({\n      pos: southPos[e.w],\n      weight: g.edge(e).weight\n    }))\n\n    const posSorted = _sortBy(pos, 'pos')\n\n    return posSorted\n  }), true) // Build the accumulator tree\n\n  let firstIndex = 1\n\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1\n  }\n\n  const treeSize = 2 * firstIndex - 1\n  firstIndex -= 1\n\n  const tree = _map(new Array(treeSize), function () {\n    return 0\n  }) // Calculate the weighted crossings\n\n  let cc = 0\n\n  _forEach(southEntries.forEach(function (entry) {\n    let index = entry.pos + firstIndex\n    tree[index] += entry.weight\n    let weightSum = 0\n\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1]\n      }\n\n      index = index - 1 >> 1\n      tree[index] += entry.weight\n    }\n\n    cc += entry.weight * weightSum\n  }))\n\n  return cc\n}\n\nexport default crossCount\n", "import _reduce from 'lodash-es/reduce'\nimport _map from 'lodash-es/map'\n\nfunction barycenter (g, movable) {\n  return _map(movable, function (v) {\n    const inV = g.inEdges(v)\n\n    if (!inV.length) {\n      return {\n        v: v\n      }\n    } else {\n      const result = _reduce(inV, function (acc, e) {\n        const edge = g.edge(e)\n        const nodeU = g.node(e.v)\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        }\n      }, {\n        sum: 0,\n        weight: 0\n      })\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      }\n    }\n  })\n}\n\nexport default barycenter\n", "import _pick from 'lodash-es/pick'\nimport _map from 'lodash-es/map'\nimport _filter from 'lodash-es/filter'\nimport _isUndefined from 'lodash-es/isUndefined'\nimport _forEach from 'lodash-es/forEach'\n\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\nfunction resolveConflicts (entries, cg) {\n  const mappedEntries = {}\n\n  _forEach(entries, function (entry, i) {\n    const tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      'in': [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    }\n\n    if (!_isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter\n      tmp.weight = entry.weight\n    }\n  })\n\n  _forEach(cg.edges(), function (e) {\n    const entryV = mappedEntries[e.v]\n    const entryW = mappedEntries[e.w]\n\n    if (!_isUndefined(entryV) && !_isUndefined(entryW)) {\n      entryW.indegree++\n      entryV.out.push(mappedEntries[e.w])\n    }\n  })\n\n  const sourceSet = _filter(mappedEntries, function (entry) {\n    return !entry.indegree\n  })\n\n  return doResolveConflicts(sourceSet)\n}\n\nfunction doResolveConflicts (sourceSet) {\n  const entries = []\n\n  function handleIn (vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return\n      }\n\n      if (_isUndefined(uEntry.barycenter) || _isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry)\n      }\n    }\n  }\n\n  function handleOut (vEntry) {\n    return function (wEntry) {\n      wEntry['in'].push(vEntry)\n\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry)\n      }\n    }\n  }\n\n  while (sourceSet.length) {\n    const entry = sourceSet.pop()\n    entries.push(entry)\n\n    _forEach(entry['in'].reverse(), handleIn(entry))\n\n    _forEach(entry.out, handleOut(entry))\n  }\n\n  const entriesFiltered = _filter(entries, function (entry) {\n    return !entry.merged\n  })\n\n  return _map(entriesFiltered, function (entry) {\n    return _pick(entry, ['vs', 'i', 'barycenter', 'weight'])\n  })\n}\n\nfunction mergeEntries (target, source) {\n  let sum = 0\n  let weight = 0\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight\n    weight += target.weight\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight\n    weight += source.weight\n  }\n\n  target.vs = source.vs.concat(target.vs)\n  target.barycenter = sum / weight\n  target.weight = weight\n  target.i = Math.min(source.i, target.i)\n  source.merged = true\n}\n\nexport default resolveConflicts\n", "import _last from 'lodash-es/last'\nimport _flatten from 'lodash-es/flatten'\nimport _forEach from 'lodash-es/forEach'\nimport _sortBy from 'lodash-es/sortBy'\nimport _has from 'lodash-es/has'\nimport util from '../util'\n\nfunction sort (entries, biasRight) {\n  const parts = util.partition(entries, function (entry) {\n    return _has(entry, 'barycenter')\n  })\n  const sortable = parts.lhs\n\n  const unsortable = _sortBy(parts.rhs, function (entry) {\n    return -entry.i\n  })\n\n  const vs = []\n  let sum = 0\n  let weight = 0\n  let vsIndex = 0\n  sortable.sort(compareWithBias(!!biasRight))\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex)\n\n  _forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length\n    vs.push(entry.vs)\n    sum += entry.barycenter * entry.weight\n    weight += entry.weight\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex)\n  })\n\n  const result = {\n    vs: _flatten(vs, true)\n  }\n\n  if (weight) {\n    result.barycenter = sum / weight\n    result.weight = weight\n  }\n\n  return result\n}\n\nfunction consumeUnsortable (vs, unsortable, index) {\n  let last\n\n  while (unsortable.length && (last = _last(unsortable)).i <= index) {\n    unsortable.pop()\n    vs.push(last.vs)\n    index++\n  }\n\n  return index\n}\n\nfunction compareWithBias (bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i\n  }\n}\n\nexport default sort\n", "import _isUndefined from 'lodash-es/isUndefined'\nimport _flatten from 'lodash-es/flatten'\nimport _has from 'lodash-es/has'\nimport _forEach from 'lodash-es/forEach'\nimport _filter from 'lodash-es/filter'\nimport barycenter from './barycenter'\nimport resolveConflicts from './resolve-conflicts'\nimport sort from './sort'\n\nfunction sortSubgraph (g, v, cg, biasRight) {\n  let movable = g.children(v)\n  const node = g.node(v)\n  const bl = node ? node.borderLeft : undefined\n  const br = node ? node.borderRight : undefined\n  const subgraphs = {}\n\n  if (bl) {\n    movable = _filter(movable, function (w) {\n      return w !== bl && w !== br\n    })\n  }\n\n  const barycenters = barycenter(g, movable)\n\n  _forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      const subgraphResult = sortSubgraph(g, entry.v, cg, biasRight)\n      subgraphs[entry.v] = subgraphResult\n\n      if (_has(subgraphResult, 'barycenter')) {\n        mergeBarycenters(entry, subgraphResult)\n      }\n    }\n  })\n\n  const entries = resolveConflicts(barycenters, cg)\n  expandSubgraphs(entries, subgraphs)\n  const result = sort(entries, biasRight)\n\n  if (bl) {\n    result.vs = _flatten([bl, result.vs, br], true)\n\n    if (g.predecessors(bl).length) {\n      const blPred = g.node(g.predecessors(bl)[0])\n      const brPred = g.node(g.predecessors(br)[0])\n\n      if (!_has(result, 'barycenter')) {\n        result.barycenter = 0\n        result.weight = 0\n      }\n\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2)\n      result.weight += 2\n    }\n  }\n\n  return result\n}\n\nfunction expandSubgraphs (entries, subgraphs) {\n  _forEach(entries, function (entry) {\n    entry.vs = _flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs\n      }\n\n      return v\n    }), true)\n  })\n}\n\nfunction mergeBarycenters (target, other) {\n  if (!_isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight)\n    target.weight += other.weight\n  } else {\n    target.barycenter = other.barycenter\n    target.weight = other.weight\n  }\n}\n\nexport default sortSubgraph\n", "import _uniqueId from 'lodash-es/uniqueId'\nimport _has from 'lodash-es/has'\nimport _isUndefined from 'lodash-es/isUndefined'\nimport _forEach from 'lodash-es/forEach'\nimport { Graph } from '@unovis/graphlibrary'\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\n\nfunction buildLayerGraph (g, rank, relationship) {\n  const root = createRootNode(g)\n  const result = new Graph({\n    compound: true\n  }).setGraph({\n    root: root\n  }).setDefaultNodeLabel(function (v) {\n    return g.node(v)\n  })\n\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n    const parent = g.parent(v)\n\n    if (node.rank === rank || (node.minRank <= rank && rank <= node.maxRank)) {\n      result.setNode(v)\n      result.setParent(v, parent || root) // This assumes we have only short edges!\n\n      _forEach(g[relationship](v), function (e) {\n        const u = e.v === v ? e.w : e.v\n        const edge = result.edge(u, v)\n        const weight = !_isUndefined(edge) ? edge.weight : 0\n        result.setEdge(u, v, {\n          weight: g.edge(e).weight + weight\n        })\n      })\n\n      if (_has(node, 'minRank')) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        })\n      }\n    }\n  })\n\n  return result\n}\n\nfunction createRootNode (g) {\n  let v\n\n  while (g.hasNode(v = _uniqueId('_root')));\n\n  return v\n}\n\nexport default buildLayerGraph\n", "import _forEach from 'lodash-es/forEach'\n\nfunction addSubgraphConstraints (g, cg, vs) {\n  const prev = {}\n  let rootPrev\n\n  _forEach(vs, function (v) {\n    let child = g.parent(v)\n    let parent\n    let prevChild\n\n    while (child) {\n      parent = g.parent(child)\n\n      if (parent) {\n        prevChild = prev[parent]\n        prev[parent] = child\n      } else {\n        prevChild = rootPrev\n        rootPrev = child\n      }\n\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child)\n        return\n      }\n\n      child = parent\n    }\n  })\n  /*\n  function dfs(v) {\n    const children = v ? g.children(v) : g.children();\n    if (children.length) {\n      const min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.forEach(children, function(child) {\n        const childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n}\n\nexport default addSubgraphConstraints\n", "import _forEach from 'lodash-es/forEach'\nimport _map from 'lodash-es/map'\nimport _cloneDeep from 'lodash-es/cloneDeep'\nimport _range from 'lodash-es/range'\nimport { Graph } from '@unovis/graphlibrary'\nimport initOrder from './init-order'\nimport crossCount from './cross-count'\nimport sortSubgraph from './sort-subgraph'\nimport buildLayerGraph from './build-layer-graph'\nimport addSubgraphConstraints from './add-subgraph-constraints'\nimport util from '../util'\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\n\nfunction order (g) {\n  const maxRank = util.maxRank(g)\n  const downLayerGraphs = buildLayerGraphs(g, _range(1, maxRank + 1), 'inEdges')\n  const upLayerGraphs = buildLayerGraphs(g, _range(maxRank - 1, -1, -1), 'outEdges')\n  let layering = initOrder(g)\n  assignOrder(g, layering)\n  let bestCC = Number.POSITIVE_INFINITY\n  let best\n\n  for (let i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2)\n    layering = util.buildLayerMatrix(g)\n    const cc = crossCount(g, layering)\n\n    if (cc < bestCC) {\n      lastBest = 0\n      best = _cloneDeep(layering)\n      bestCC = cc\n    }\n  }\n\n  assignOrder(g, best)\n}\n\nfunction buildLayerGraphs (g, ranks, relationship) {\n  return _map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship)\n  })\n}\n\nfunction sweepLayerGraphs (layerGraphs, biasRight) {\n  const cg = new Graph()\n\n  _forEach(layerGraphs, function (lg) {\n    const root = lg.graph().root\n    const sorted = sortSubgraph(lg, root, cg, biasRight)\n\n    _forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i\n    })\n\n    addSubgraphConstraints(lg, cg, sorted.vs)\n  })\n}\n\nfunction assignOrder (g, layering) {\n  _forEach(layering, function (layer) {\n    _forEach(layer, function (v, i) {\n      g.node(v).order = i\n    })\n  })\n}\n\nexport default order\n", "import WeakMap from './_WeakMap.js';\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nexport default metaMap;\n", "import identity from './identity.js';\nimport metaMap from './_metaMap.js';\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nexport default baseSetData;\n", "import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nexport default createCtor;\n", "import createCtor from './_createCtor.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nexport default createBind;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nexport default composeArgs;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nexport default composeArgsRight;\n", "/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nexport default countHolders;\n", "/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nexport default baseLodash;\n", "import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nexport default LazyWrapper;\n", "import metaMap from './_metaMap.js';\nimport noop from './noop.js';\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nexport default getData;\n", "/** Used to lookup unminified function names. */\nvar realNames = {};\n\nexport default realNames;\n", "import realNames from './_realNames.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nexport default getFuncName;\n", "import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nexport default LodashWrapper;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport copyArray from './_copyArray.js';\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nexport default wrapperClone;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseLodash from './_baseLodash.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\nimport wrapperClone from './_wrapperClone.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nexport default lodash;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport lodash from './wrapperLodash.js';\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nexport default isLaziable;\n", "import baseSetData from './_baseSetData.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nexport default setData;\n", "/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nexport default getWrapDetails;\n", "/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nexport default insertWrapDetails;\n", "import arrayEach from './_arrayEach.js';\nimport arrayIncludes from './_arrayIncludes.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nexport default updateWrapDetails;\n", "import getWrapDetails from './_getWrapDetails.js';\nimport insertWrapDetails from './_insertWrapDetails.js';\nimport setToString from './_setToString.js';\nimport updateWrapDetails from './_updateWrapDetails.js';\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nexport default setWrapToString;\n", "import isLaziable from './_isLaziable.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nexport default createRecurry;\n", "/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nexport default getHolder;\n", "import copyArray from './_copyArray.js';\nimport isIndex from './_isIndex.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nexport default reorder;\n", "/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nexport default replaceHolders;\n", "import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport countHolders from './_countHolders.js';\nimport createCtor from './_createCtor.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport reorder from './_reorder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nexport default createHybrid;\n", "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n", "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nexport default createPartial;\n", "import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nexport default mergeData;\n", "import baseSetData from './_baseSetData.js';\nimport createBind from './_createBind.js';\nimport createCurry from './_createCurry.js';\nimport createHybrid from './_createHybrid.js';\nimport createPartial from './_createPartial.js';\nimport getData from './_getData.js';\nimport mergeData from './_mergeData.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nexport default createWrap;\n", "import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nexport default bind;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nexport default maxBy;\n", "import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nexport default baseToPairs;\n", "/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nexport default setToPairs;\n", "import baseToPairs from './_baseToPairs.js';\nimport getTag from './_getTag.js';\nimport mapToArray from './_mapToArray.js';\nimport setToPairs from './_setToPairs.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function(object) {\n    var tag = getTag(object);\n    if (tag == mapTag) {\n      return mapToArray(object);\n    }\n    if (tag == setTag) {\n      return setToPairs(object);\n    }\n    return baseToPairs(object, keysFunc(object));\n  };\n}\n\nexport default createToPairs;\n", "import createToPairs from './_createToPairs.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nexport default toPairs;\n", "import _bind from 'lodash-es/bind'\nimport _merge from 'lodash-es/merge'\nimport _map from 'lodash-es/map'\nimport _mapValues from 'lodash-es/mapValues'\nimport _max from 'lodash-es/max'\nimport _min from 'lodash-es/min'\nimport _maxBy from 'lodash-es/maxBy'\nimport _toPairs from 'lodash-es/toPairs'\nimport _values from 'lodash-es/values'\nimport _minBy from 'lodash-es/minBy'\nimport _sortBy from 'lodash-es/sortBy'\nimport _has from 'lodash-es/has'\nimport _find from 'lodash-es/find'\nimport _range from 'lodash-es/range'\nimport _reduce from 'lodash-es/reduce'\nimport _forEach from 'lodash-es/forEach'\nimport _last from 'lodash-es/last'\nimport { Graph } from '@unovis/graphlibrary'\nimport util from '../util'\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\n\nfunction findType1Conflicts (g, layering) {\n  const conflicts = {}\n\n  function visitLayer (prevLayer, layer) {\n    // last visited node in the previous layer that is incident on an inner\n    // segment.\n    let k0 = 0 // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n\n    let scanPos = 0\n    const prevLayerLength = prevLayer.length\n\n    const lastNode = _last(layer)\n\n    _forEach(layer, function (v, i) {\n      const w = findOtherInnerSegmentNode(g, v)\n      const k1 = w ? g.node(w).order : prevLayerLength\n\n      if (w || v === lastNode) {\n        _forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _forEach(g.predecessors(scanNode), function (u) {\n            const uLabel = g.node(u)\n            const uPos = uLabel.order\n\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode)\n            }\n          })\n        })\n\n        scanPos = i + 1\n        k0 = k1\n      }\n    })\n\n    return layer\n  }\n\n  _reduce(layering, visitLayer)\n\n  return conflicts\n}\n\nfunction findType2Conflicts (g, layering) {\n  const conflicts = {}\n\n  function scan (south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    let v\n\n    _forEach(_range(southPos, southEnd), function (i) {\n      v = south[i]\n\n      if (g.node(v).dummy) {\n        _forEach(g.predecessors(v), function (u) {\n          const uNode = g.node(u)\n\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v)\n          }\n        })\n      }\n    })\n  }\n\n  function visitLayer (north, south) {\n    let prevNorthPos = -1\n    let nextNorthPos\n    let southPos = 0\n\n    _forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === 'border') {\n        const predecessors = g.predecessors(v)\n\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos)\n          southPos = southLookahead\n          prevNorthPos = nextNorthPos\n        }\n      }\n\n      scan(south, southPos, south.length, nextNorthPos, north.length)\n    })\n\n    return south\n  }\n\n  _reduce(layering, visitLayer)\n\n  return conflicts\n}\n\nfunction findOtherInnerSegmentNode (g, v) {\n  if (g.node(v).dummy) {\n    return _find(g.predecessors(v), function (u) {\n      return g.node(u).dummy\n    })\n  }\n}\n\nfunction addConflict (conflicts, v, w) {\n  if (v > w) {\n    const tmp = v\n    v = w\n    w = tmp\n  }\n\n  let conflictsV = conflicts[v]\n\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {}\n  }\n\n  conflictsV[w] = true\n}\n\nfunction hasConflict (conflicts, v, w) {\n  if (v > w) {\n    const tmp = v\n    v = w\n    w = tmp\n  }\n\n  return _has(conflicts[v], w)\n}\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\n\nfunction verticalAlignment (g, layering, conflicts, neighborFn) {\n  const root = {}\n  const align = {}\n  const pos = {} // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n\n  _forEach(layering, function (layer) {\n    _forEach(layer, function (v, order) {\n      root[v] = v\n      align[v] = v\n      pos[v] = order\n    })\n  })\n\n  _forEach(layering, function (layer) {\n    let prevIdx = -1\n\n    _forEach(layer, function (v) {\n      let ws = neighborFn(v)\n\n      if (ws.length) {\n        ws = _sortBy(ws, function (w) {\n          return pos[w]\n        })\n        const mp = (ws.length - 1) / 2\n\n        for (let i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          const w = ws[i]\n\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v\n            align[v] = root[v] = root[w]\n            prevIdx = pos[w]\n          }\n        }\n      }\n    })\n  })\n\n  return {\n    root: root,\n    align: align\n  }\n}\n\nfunction horizontalCompaction (g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  const xs = {}\n  const blockG = buildBlockGraph(g, layering, root, reverseSep) // First pass, assign smallest coordinates via DFS\n\n  const visited = {}\n\n  function pass1 (v) {\n    if (!_has(visited, v)) {\n      visited[v] = true\n      xs[v] = _reduce(blockG.inEdges(v), function (max, e) {\n        pass1(e.v)\n        return Math.max(max, xs[e.v] + blockG.edge(e))\n      }, 0)\n    }\n  }\n\n  _forEach(blockG.nodes(), pass1)\n\n  const borderType = reverseSep ? 'borderLeft' : 'borderRight'\n\n  function pass2 (v) {\n    if (visited[v] !== 2) {\n      visited[v]++\n      const node = g.node(v)\n\n      const min = _reduce(blockG.outEdges(v), function (min, e) {\n        pass2(e.w)\n        return Math.min(min, xs[e.w] - blockG.edge(e))\n      }, Number.POSITIVE_INFINITY)\n\n      if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n        xs[v] = Math.max(xs[v], min)\n      }\n    }\n  }\n\n  _forEach(blockG.nodes(), pass2) // Assign x coordinates to all nodes\n\n  _forEach(align, function (v) {\n    xs[v] = xs[root[v]]\n  })\n\n  return xs\n}\n\nfunction buildBlockGraph (g, layering, root, reverseSep) {\n  const blockGraph = new Graph()\n  const graphLabel = g.graph()\n  const sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep)\n\n  _forEach(layering, function (layer) {\n    let u\n\n    _forEach(layer, function (v) {\n      const vRoot = root[v]\n      blockGraph.setNode(vRoot)\n\n      if (u) {\n        const uRoot = root[u]\n        const prevMax = blockGraph.edge(uRoot, vRoot)\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0))\n      }\n\n      u = v\n    })\n  })\n\n  return blockGraph\n}\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\n\nfunction findSmallestWidthAlignment (g, xss) {\n  return _minBy(_values(xss), function (xs) {\n    const min = (_minBy(_toPairs(xs), pair => pair[1] - width(g, pair[0]) / 2) || ['k', 0])[1]\n    const max = (_maxBy(_toPairs(xs), pair => pair[1] + width(g, pair[0]) / 2) || ['k', 0])[1]\n    return max - min\n  })\n}\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\n\nfunction alignCoordinates (xss, alignTo) {\n  const alignToVals = _values(alignTo)\n\n  const alignToMin = _min(alignToVals)\n\n  const alignToMax = _max(alignToVals)\n\n  _forEach(['u', 'd'], function (vert) {\n    _forEach(['l', 'r'], function (horiz) {\n      const alignment = vert + horiz\n      const xs = xss[alignment]\n\n      if (xs === alignTo) {\n        return\n      }\n\n      const xsVals = _values(xs)\n\n      const delta = horiz === 'l' ? alignToMin - _min(xsVals) : alignToMax - _max(xsVals)\n\n      if (delta) {\n        xss[alignment] = _mapValues(xs, function (x) {\n          return x + delta\n        })\n      }\n    })\n  })\n}\n\nfunction balance (xss, align) {\n  return _mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v]\n    } else {\n      const xs = _sortBy(_map(xss, v))\n\n      return (xs[1] + xs[2]) / 2\n    }\n  })\n}\n\nexport function positionX (g) {\n  const layering = util.buildLayerMatrix(g)\n\n  const conflicts = _merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering))\n\n  const xss = {}\n  let adjustedLayering\n\n  _forEach(['u', 'd'], function (vert) {\n    adjustedLayering = vert === 'u' ? layering : _values(layering).reverse()\n\n    _forEach(['l', 'r'], function (horiz) {\n      if (horiz === 'r') {\n        adjustedLayering = _map(adjustedLayering, function (inner) {\n          return _values(inner).reverse()\n        })\n      }\n\n      const neighborFn = _bind(vert === 'u' ? g.predecessors : g.successors, g)\n\n      const align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn)\n      let xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === 'r')\n\n      if (horiz === 'r') {\n        xs = _mapValues(xs, function (x) {\n          return -x\n        })\n      }\n\n      xss[vert + horiz] = xs\n    })\n  })\n\n  const smallestWidth = findSmallestWidthAlignment(g, xss)\n  alignCoordinates(xss, smallestWidth)\n  return balance(xss, g.graph().align)\n}\n\nfunction sep (nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    const vLabel = g.node(v)\n    const wLabel = g.node(w)\n    let sum = 0\n    let delta\n    sum += vLabel.width / 2\n\n    if (_has(vLabel, 'labelpos')) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = -vLabel.width / 2\n          break\n\n        case 'r':\n          delta = vLabel.width / 2\n          break\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta\n    }\n\n    delta = 0\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2\n    sum += wLabel.width / 2\n\n    if (_has(wLabel, 'labelpos')) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case 'l':\n          delta = wLabel.width / 2\n          break\n\n        case 'r':\n          delta = -wLabel.width / 2\n          break\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta\n    }\n\n    delta = 0\n    return sum\n  }\n}\n\nfunction width (g, v) {\n  return g.node(v).width\n}\n\nexport default {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n}\n", "import _map from 'lodash-es/map'\nimport _max from 'lodash-es/max'\nimport _forEach from 'lodash-es/forEach'\nimport util from '../util'\nimport { positionX } from './bk'\n\nfunction position (g) {\n  g = util.asNonCompoundGraph(g)\n  positionY(g)\n\n  _forEach(positionX(g), function (x, v) {\n    g.node(v).x = x\n  })\n}\n\nfunction positionY (g) {\n  const layering = util.buildLayerMatrix(g)\n  const rankSep = g.graph().ranksep\n  let prevY = 0\n\n  _forEach(layering, function (layer) {\n    const maxHeight = _max(_map(layer, function (v) {\n      return g.node(v).height\n    }))\n\n    _forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2\n    })\n\n    prevY += maxHeight + rankSep\n  })\n}\n\nexport default position\n", "import _mapValues from 'lodash-es/mapValues'\nimport _last from 'lodash-es/last'\nimport _defaults from 'lodash-es/defaults'\nimport _pick from 'lodash-es/pick'\nimport _merge from 'lodash-es/merge'\nimport _has from 'lodash-es/has'\nimport _forEach from 'lodash-es/forEach'\nimport { Graph } from '@unovis/graphlibrary'\nimport acyclic from './acyclic'\nimport normalize from './normalize'\nimport rank from './rank'\nimport util, { normalizeRanks, removeEmptyRanks } from './util'\nimport parentDummyChains from './parent-dummy-chains'\nimport nestingGraph from './nesting-graph'\nimport addBorderSegments from './add-border-segments'\nimport coordinateSystem from './coordinate-system'\nimport order from './order'\nimport position from './position'\n\nfunction layout (g, opts) {\n  const time = opts && opts.debugTiming ? util.time : util.notime\n  time('layout', function () {\n    const layoutGraph = time('  buildLayoutGraph', function () {\n      return buildLayoutGraph(g)\n    })\n    time('  runLayout', function () {\n      runLayout(layoutGraph, time)\n    })\n    time('  updateInputGraph', function () {\n      updateInputGraph(g, layoutGraph)\n    })\n  })\n}\n\nfunction runLayout (g, time) {\n  time('    makeSpaceForEdgeLabels', function () {\n    makeSpaceForEdgeLabels(g)\n  })\n  time('    removeSelfEdges', function () {\n    removeSelfEdges(g)\n  })\n  time('    acyclic', function () {\n    acyclic.run(g)\n  })\n  time('    nestingGraph.run', function () {\n    nestingGraph.run(g)\n  })\n  time('    rank', function () {\n    rank(util.asNonCompoundGraph(g))\n  })\n  time('    injectEdgeLabelProxies', function () {\n    injectEdgeLabelProxies(g)\n  })\n  time('    removeEmptyRanks', function () {\n    removeEmptyRanks(g)\n  })\n  time('    nestingGraph.cleanup', function () {\n    nestingGraph.cleanup(g)\n  })\n  time('    normalizeRanks', function () {\n    normalizeRanks(g)\n  })\n  time('    assignRankMinMax', function () {\n    assignRankMinMax(g)\n  })\n  time('    removeEdgeLabelProxies', function () {\n    removeEdgeLabelProxies(g)\n  })\n  time('    normalize.run', function () {\n    normalize.run(g)\n  })\n  time('    parentDummyChains', function () {\n    parentDummyChains(g)\n  })\n  time('    addBorderSegments', function () {\n    addBorderSegments(g)\n  })\n  time('    order', function () {\n    order(g)\n  })\n  time('    insertSelfEdges', function () {\n    insertSelfEdges(g)\n  })\n  time('    adjustCoordinateSystem', function () {\n    coordinateSystem.adjust(g)\n  })\n  time('    position', function () {\n    position(g)\n  })\n  time('    positionSelfEdges', function () {\n    positionSelfEdges(g)\n  })\n  time('    removeBorderNodes', function () {\n    removeBorderNodes(g)\n  })\n  time('    normalize.undo', function () {\n    normalize.undo(g)\n  })\n  time('    fixupEdgeLabelCoords', function () {\n    fixupEdgeLabelCoords(g)\n  })\n  time('    undoCoordinateSystem', function () {\n    coordinateSystem.undo(g)\n  })\n  time('    translateGraph', function () {\n    translateGraph(g)\n  })\n  time('    assignNodeIntersects', function () {\n    assignNodeIntersects(g)\n  })\n  time('    reversePoints', function () {\n    reversePointsForReversedEdges(g)\n  })\n  time('    acyclic.undo', function () {\n    acyclic.undo(g)\n  })\n}\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\n\nfunction updateInputGraph (inputGraph, layoutGraph) {\n  _forEach(inputGraph.nodes(), function (v) {\n    const inputLabel = inputGraph.node(v)\n    const layoutLabel = layoutGraph.node(v)\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x\n      inputLabel.y = layoutLabel.y\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width\n        inputLabel.height = layoutLabel.height\n      }\n    }\n  })\n\n  _forEach(inputGraph.edges(), function (e) {\n    const inputLabel = inputGraph.edge(e)\n    const layoutLabel = layoutGraph.edge(e)\n    inputLabel.points = layoutLabel.points\n\n    if (_has(layoutLabel, 'x')) {\n      inputLabel.x = layoutLabel.x\n      inputLabel.y = layoutLabel.y\n    }\n  })\n\n  inputGraph.graph().width = layoutGraph.graph().width\n  inputGraph.graph().height = layoutGraph.graph().height\n}\n\nconst graphNumAttrs = ['nodesep', 'edgesep', 'ranksep', 'marginx', 'marginy']\nconst graphDefaults = {\n  ranksep: 50,\n  edgesep: 20,\n  nodesep: 50,\n  rankdir: 'tb'\n}\nconst graphAttrs = ['acyclicer', 'ranker', 'rankdir', 'align']\nconst nodeNumAttrs = ['width', 'height']\nconst nodeDefaults = {\n  width: 0,\n  height: 0\n}\nconst edgeNumAttrs = ['minlen', 'weight', 'width', 'height', 'labeloffset']\nconst edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: 'r'\n}\nconst edgeAttrs = ['labelpos']\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\n\nfunction buildLayoutGraph (inputGraph) {\n  const g = new Graph({\n    multigraph: true,\n    compound: true\n  })\n  const graph = canonicalize(inputGraph.graph())\n  g.setGraph(_merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _pick(graph, graphAttrs)))\n\n  _forEach(inputGraph.nodes(), function (v) {\n    const node = canonicalize(inputGraph.node(v))\n    g.setNode(v, _defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults))\n    g.setParent(v, inputGraph.parent(v))\n  })\n\n  _forEach(inputGraph.edges(), function (e) {\n    const edge = canonicalize(inputGraph.edge(e))\n    g.setEdge(e, _merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _pick(edge, edgeAttrs)))\n  })\n\n  return g\n}\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\n\nfunction makeSpaceForEdgeLabels (g) {\n  const graph = g.graph()\n  graph.ranksep /= 2\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n    edge.minlen *= 2\n\n    if (edge.labelpos.toLowerCase() !== 'c') {\n      if (graph.rankdir === 'TB' || graph.rankdir === 'BT') {\n        edge.width += edge.labeloffset\n      } else {\n        edge.height += edge.labeloffset\n      }\n    }\n  })\n}\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\n\nfunction injectEdgeLabelProxies (g) {\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    if (edge.width && edge.height) {\n      const v = g.node(e.v)\n      const w = g.node(e.w)\n      const label = {\n        rank: (w.rank - v.rank) / 2 + v.rank,\n        e: e\n      }\n      util.addDummyNode(g, 'edge-proxy', label, '_ep')\n    }\n  })\n}\n\nfunction assignRankMinMax (g) {\n  let maxRank = 0\n\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank\n      node.maxRank = g.node(node.borderBottom).rank\n      maxRank = Math.max(maxRank, node.maxRank)\n    }\n  })\n\n  g.graph().maxRank = maxRank\n}\n\nfunction removeEdgeLabelProxies (g) {\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n\n    if (node.dummy === 'edge-proxy') {\n      g.edge(node.e).labelRank = node.rank\n      g.removeNode(v)\n    }\n  })\n}\n\nfunction translateGraph (g) {\n  let minX = Number.POSITIVE_INFINITY\n  let maxX = 0\n  let minY = Number.POSITIVE_INFINITY\n  let maxY = 0\n  const graphLabel = g.graph()\n  const marginX = graphLabel.marginx || 0\n  const marginY = graphLabel.marginy || 0\n\n  function getExtremes (attrs) {\n    const x = attrs.x\n    const y = attrs.y\n    const w = attrs.width\n    const h = attrs.height\n    minX = Math.min(minX, x - w / 2)\n    maxX = Math.max(maxX, x + w / 2)\n    minY = Math.min(minY, y - h / 2)\n    maxY = Math.max(maxY, y + h / 2)\n  }\n\n  _forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v))\n  })\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    if (_has(edge, 'x')) {\n      getExtremes(edge)\n    }\n  })\n\n  minX -= marginX\n  minY -= marginY\n\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n    node.x -= minX\n    node.y -= minY\n  })\n\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    _forEach(edge.points, function (p) {\n      p.x -= minX\n      p.y -= minY\n    })\n\n    if (_has(edge, 'x')) {\n      edge.x -= minX\n    }\n\n    if (_has(edge, 'y')) {\n      edge.y -= minY\n    }\n  })\n\n  graphLabel.width = maxX - minX + marginX\n  graphLabel.height = maxY - minY + marginY\n}\n\nfunction assignNodeIntersects (g) {\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n    const nodeV = g.node(e.v)\n    const nodeW = g.node(e.w)\n    let p1 = null\n    let p2 = null\n\n    if (!edge.points) {\n      edge.points = []\n      p1 = nodeW\n      p2 = nodeV\n    } else {\n      p1 = edge.points[0]\n      p2 = edge.points[edge.points.length - 1]\n    }\n\n    edge.points.unshift(util.intersectRect(nodeV, p1))\n    edge.points.push(util.intersectRect(nodeW, p2))\n  })\n}\n\nfunction fixupEdgeLabelCoords (g) {\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    if (_has(edge, 'x')) {\n      if (edge.labelpos === 'l' || edge.labelpos === 'r') {\n        edge.width -= edge.labeloffset\n      }\n\n      switch (edge.labelpos) {\n        case 'l':\n          edge.x -= edge.width / 2 + edge.labeloffset\n          break\n\n        case 'r':\n          edge.x += edge.width / 2 + edge.labeloffset\n          break\n      }\n    }\n  })\n}\n\nfunction reversePointsForReversedEdges (g) {\n  _forEach(g.edges(), function (e) {\n    const edge = g.edge(e)\n\n    if (edge.reversed) {\n      edge.points.reverse()\n    }\n  })\n}\n\nfunction removeBorderNodes (g) {\n  _forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      const node = g.node(v)\n      const t = g.node(node.borderTop)\n      const b = g.node(node.borderBottom)\n      const l = g.node(_last(node.borderLeft))\n      const r = g.node(_last(node.borderRight))\n      node.width = Math.abs(r.x - l.x)\n      node.height = Math.abs(b.y - t.y)\n      node.x = l.x + node.width / 2\n      node.y = t.y + node.height / 2\n    }\n  })\n\n  _forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === 'border') {\n      g.removeNode(v)\n    }\n  })\n}\n\nfunction removeSelfEdges (g) {\n  _forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      const node = g.node(e.v)\n\n      if (!node.selfEdges) {\n        node.selfEdges = []\n      }\n\n      node.selfEdges.push({\n        e: e,\n        label: g.edge(e)\n      })\n      g.removeEdge(e)\n    }\n  })\n}\n\nfunction insertSelfEdges (g) {\n  const layers = util.buildLayerMatrix(g)\n\n  _forEach(layers, function (layer) {\n    let orderShift = 0\n\n    _forEach(layer, function (v, i) {\n      const node = g.node(v)\n      node.order = i + orderShift\n\n      _forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(g, 'selfedge', {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, '_se')\n      })\n\n      delete node.selfEdges\n    })\n  })\n}\n\nfunction positionSelfEdges (g) {\n  _forEach(g.nodes(), function (v) {\n    const node = g.node(v)\n\n    if (node.dummy === 'selfedge') {\n      const selfNode = g.node(node.e.v)\n      const x = selfNode.x + selfNode.width / 2\n      const y = selfNode.y\n      const dx = node.x - x\n      const dy = selfNode.height / 2\n      g.setEdge(node.e, node.label)\n      g.removeNode(v)\n      node.label.points = [{\n        x: x + 2 * dx / 3,\n        y: y - dy\n      }, {\n        x: x + 5 * dx / 6,\n        y: y - dy\n      }, {\n        x: x + dx,\n        y: y\n      }, {\n        x: x + 5 * dx / 6,\n        y: y + dy\n      }, {\n        x: x + 2 * dx / 3,\n        y: y + dy\n      }]\n      node.label.x = node.x\n      node.label.y = node.y\n    }\n  })\n}\n\nfunction selectNumberAttrs (obj, attrs) {\n  return _mapValues(_pick(obj, attrs), Number)\n}\n\nfunction canonicalize (attrs) {\n  const newAttrs = {}\n\n  _forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v\n  })\n\n  return newAttrs\n}\n\nexport default layout\n", "import dagreLayout from './layout'\n\nexport const layout = dagreLayout\nexport default {\n  layout: dagreLayout\n}\n\n"],
  "mappings": "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",
  "names": ["object", "index", "index", "index", "index", "objectProto", "hasOwnProperty", "index", "index", "index", "g", "dfs", "index", "index", "rank", "min", "order", "run", "undo", "dfs", "rank", "dfs", "index", "nativeMax", "index", "initRank", "edge", "postorder", "dfs", "run", "dfs", "dfs", "rank", "maxRank", "addBorderNode", "undo", "index", "order", "index", "collection", "maxRank", "dfs", "index", "index", "last", "rank", "maxRank", "rank", "nativeMax", "nativeMax", "objectProto", "hasOwnProperty", "objectProto", "hasOwnProperty", "WRAP_BIND_FLAG", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_FLAG", "WRAP_PARTIAL_FLAG", "WRAP_PARTIAL_RIGHT_FLAG", "index", "index", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_FLAG", "WRAP_CURRY_RIGHT_FLAG", "WRAP_ARY_FLAG", "WRAP_FLIP_FLAG", "index", "index", "WRAP_BIND_FLAG", "PLACEHOLDER", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_BOUND_FLAG", "WRAP_CURRY_FLAG", "WRAP_ARY_FLAG", "WRAP_REARG_FLAG", "nativeMin", "WRAP_BIND_FLAG", "WRAP_BIND_KEY_FLAG", "WRAP_CURRY_FLAG", "WRAP_CURRY_RIGHT_FLAG", "WRAP_PARTIAL_FLAG", "WRAP_PARTIAL_RIGHT_FLAG", "nativeMax", "WRAP_BIND_FLAG", "WRAP_PARTIAL_FLAG", "index", "order", "max", "min", "time", "maxRank", "layout", "dagreLayout"]
}
