{"version":3,"file":"index.js","sources":["../../../../../src/components/graph/modules/link/index.ts"],"sourcesContent":["import { select, Selection } from 'd3-selection'\nimport { range, sum } from 'd3-array'\nimport { Transition } from 'd3-transition'\nimport toPx from 'to-px'\n\n// Utils\nimport { throttle, getValue, getNumber, getBoolean, ensureArray } from 'utils/data'\nimport { smartTransition } from 'utils/d3'\nimport { getCSSVariableValueInPixels } from 'utils/misc'\nimport { estimateStringPixelLength } from 'utils/text'\n\n// Types\nimport { GraphInputLink, GraphInputNode } from 'types/graph'\n\n// Local Types\nimport { GraphCircleLabel, GraphLink, GraphLinkArrowStyle, GraphLinkStyle } from '../../types'\n\n// Config\nimport { GraphConfigInterface } from '../../config'\n\n// Helpers\nimport { getX, getY, isInternalHref } from '../node/helper'\nimport {\n  getLinkShiftTransform,\n  getLinkStrokeWidth,\n  getLinkBandWidth,\n  getLinkColor,\n  getLinkLabelTextColor,\n  getLinkArrowStyle,\n  LINK_MARKER_WIDTH,\n} from './helper'\nimport { ZoomLevel } from '../zoom-levels'\n\n// Styles\nimport * as generalSelectors from '../../style'\nimport * as linkSelectors from './style'\n\nexport function createLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>\n): void {\n  selection.attr('opacity', 0)\n\n  selection.append('path')\n    .attr('class', linkSelectors.linkSupport)\n\n  selection.append('path')\n    .attr('class', linkSelectors.link)\n\n  selection.append('path')\n    .attr('class', linkSelectors.linkBand)\n\n  selection.append('use')\n    .attr('class', linkSelectors.linkArrow)\n\n  selection.append('g')\n    .attr('class', linkSelectors.flowGroup)\n    .style('opacity', 0)\n    .selectAll(`.${linkSelectors.flowCircle}`)\n    .data(range(0, 6)).enter()\n    .append('circle')\n    .attr('class', linkSelectors.flowCircle)\n}\n\n/** Updates the links partially according to their `_state` */\nexport function updateLinksPartial<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const isGreyedOut = (d: GraphLink<N, L>, i: number): boolean => getBoolean(d, config.linkDisabled, i) || d._state.greyout\n  selection\n    .classed(linkSelectors.greyedOutLink, (d, i) => isGreyedOut(d, i))\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const group = select(element)\n    group.select(`.${linkSelectors.link}`)\n    group.select(`.${linkSelectors.linkBand}`)\n    const linkSupport = group.select(`.${linkSelectors.linkSupport}`)\n\n    linkSupport\n      .style('stroke-opacity', (d._state.hovered || d._state.selected) ? 0.2 : 0)\n      .style('stroke-width',\n        d._state.selected\n          ? getLinkBandWidth(d, scale, config) + 5\n          : d._state.hovered ? getLinkBandWidth(d, scale, config) + 10 : null\n      )\n  })\n}\n\nexport function updateLinkLines<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number,\n  scale = 1,\n  getLinkArrowDefId: (arrow: GraphLinkArrowStyle | undefined) => string,\n  linkPathLengthMap: Map<string, number>\n): Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown> {\n  return selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const link = linkGroup.select<SVGPathElement>(`.${linkSelectors.link}`)\n    const linkBand = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkBand}`)\n    const linkSupport = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkSupport}`)\n    const linkArrow = linkGroup.select<SVGUseElement>(`.${linkSelectors.linkArrow}`)\n    const linkColor = getLinkColor(d, config)\n    const linkShiftTransform = getLinkShiftTransform(d, config.linkNeighborSpacing)\n    const linkLabelData = ensureArray(\n      getValue<GraphLink<N, L>, GraphCircleLabel | GraphCircleLabel[]>(d, config.linkLabel, d._indexGlobal)\n    )\n    const offsetSource = getValue(d, config.linkSourcePointOffset, i)\n    const offsetTarget = getValue(d, config.linkTargetPointOffset, i)\n    const x1 = getX(d.source) + (offsetSource?.[0] || 0)\n    const y1 = getY(d.source) + (offsetSource?.[1] || 0)\n    const x2 = getX(d.target) + (offsetTarget?.[0] || 0)\n    const y2 = getY(d.target) + (offsetTarget?.[1] || 0)\n\n    const curvature = getNumber(d, config.linkCurvature, i) ?? 0\n    const cp1x = x1 + (x2 - x1) * 0.5 * curvature\n    const cp1y = y1 + (y2 - y1) * 0.0 * curvature\n    const cp2x = x1 + (x2 - x1) * 0.5 * curvature\n    const cp2y = y1 + (y2 - y1) * 1.0 * curvature\n\n    const pathData = `M${x1},${y1} C${cp1x},${cp1y} ${cp2x},${cp2y} ${x2},${y2}`\n    const linkPathElement = linkSupport.attr('d', pathData).node()\n    const cachedLinkPathLength = linkPathLengthMap.get(pathData)\n    const pathLength = cachedLinkPathLength ?? linkPathElement.getTotalLength()\n    if (!cachedLinkPathLength) linkPathLengthMap.set(pathData, pathLength)\n\n    linkSupport\n      .style('stroke', linkColor)\n      .attr('transform', linkShiftTransform)\n\n    link\n      .attr('class', linkSelectors.link)\n      .style('stroke-width', getLinkStrokeWidth(d, scale, config))\n      .style('stroke', linkColor)\n      .attr('transform', linkShiftTransform)\n\n    smartTransition(link, duration)\n      .attr('d', pathData)\n\n    linkBand\n      .attr('class', linkSelectors.linkBand)\n      .attr('transform', linkShiftTransform)\n      .style('stroke-width', getLinkBandWidth(d, scale, config))\n      .style('stroke', linkColor)\n\n    smartTransition(linkBand, duration)\n      .attr('d', pathData)\n\n\n    // Arrow\n    const linkArrowStyle = getLinkArrowStyle(d, config)\n    if (linkArrowStyle) {\n      const arrowPos = pathLength * (linkLabelData.length ? 0.65 : 0.5)\n      const p1 = linkPathElement.getPointAtLength(arrowPos)\n      const p2 = linkPathElement.getPointAtLength(arrowPos + 1) // A point very close to p1\n\n      // Calculate the angle for the arrowhead\n      const angle = Math.atan2(p2.y - p1.y, p2.x - p1.x) * (180 / Math.PI)\n      const arrowWasShownBefore = linkArrow.attr('href')\n      linkArrow\n        .attr('href', `#${getLinkArrowDefId(linkArrowStyle)}`)\n\n      smartTransition(linkArrow, arrowWasShownBefore ? duration : 0)\n        .attr('fill', linkColor)\n        .attr('transform', `translate(${p1.x}, ${p1.y}) rotate(${angle})`)\n    } else {\n      linkArrow.attr('href', null)\n    }\n  })\n}\n\nexport function updateLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number,\n  scale = 1,\n  getLinkArrowDefId: (arrow: GraphLinkArrowStyle | undefined) => string,\n  linkPathLengthMap: Map<string, number>\n): void {\n  const { linkFlowParticleSize, linkStyle, linkFlow, linkLabel, linkLabelShiftFromCenter } = config\n  if (!selection.size()) return\n\n  selection\n    .classed(\n      linkSelectors.linkDashed,\n      d => getValue<GraphLink<N, L>, GraphLinkStyle>(d, linkStyle, d._indexGlobal) === GraphLinkStyle.Dashed\n    )\n\n  // Update line and arrow positions\n  updateLinkLines(selection, config, duration, scale, getLinkArrowDefId, linkPathLengthMap)\n\n  // Update labels and link flow (particles) groups\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n    const linkSupport = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkSupport}`)\n    const linkPathElement = linkSupport.node()\n    const linkColor = getLinkColor(d, config)\n    const linkShiftTransform = getLinkShiftTransform(d, config.linkNeighborSpacing)\n    const linkLabelData = ensureArray(\n      getValue<GraphLink<N, L>, GraphCircleLabel | GraphCircleLabel[]>(d, linkLabel, d._indexGlobal)\n    )\n\n    // Particle Flow\n    flowGroup\n      .attr('transform', linkShiftTransform)\n      .style('display', getBoolean(d, linkFlow, d._indexGlobal) ? null : 'none')\n\n    flowGroup\n      .selectAll(`.${linkSelectors.flowCircle}`)\n      .attr('r', linkFlowParticleSize / scale)\n      .style('fill', linkColor)\n\n    smartTransition(flowGroup, duration)\n      .style('opacity', scale < ZoomLevel.Level2 ? 0 : 1)\n\n    // Labels\n    // Preparing the labels before rendering to be able to center them\n    const linkLabelsDataPrepared = linkLabelData.map((linkLabelDatum) => {\n      const text = linkLabelDatum.text?.toString() || ''\n      const shouldRenderUseElement = isInternalHref(text)\n      const fontSizePx = toPx(linkLabelDatum.fontSize) ?? getCSSVariableValueInPixels('var(--vis-graph-link-label-font-size)', linkGroup.node())\n      const shouldBeRenderedAsCircle = text.length <= 2 || shouldRenderUseElement\n      const paddingVertical = 4\n      const paddingHorizontal = shouldBeRenderedAsCircle ? paddingVertical : 8\n      const estimatedWidthPx = estimateStringPixelLength(text, fontSizePx)\n\n      return {\n        ...linkLabelDatum,\n        _shouldRenderUseElement: shouldRenderUseElement,\n        _fontSizePx: fontSizePx,\n        _shouldBeRenderedAsCircle: shouldBeRenderedAsCircle,\n        _paddingVertical: paddingVertical,\n        _paddingHorizontal: paddingHorizontal,\n        _estimatedWidthPx: estimatedWidthPx,\n        _borderRadius: linkLabelDatum.radius ?? (shouldBeRenderedAsCircle ? fontSizePx : 4),\n        _backgroundWidth: (shouldBeRenderedAsCircle ? fontSizePx : estimatedWidthPx) + paddingHorizontal * 2,\n        _backgroundHeight: fontSizePx + paddingVertical * 2,\n      }\n    })\n    type GraphCircleLabelPrepared = typeof linkLabelsDataPrepared[0]\n    const linkLabelGroups = linkGroup\n      .selectAll<SVGGElement, GraphCircleLabelPrepared>(`.${linkSelectors.linkLabelGroup}`)\n      .data(linkLabelsDataPrepared, (d: GraphCircleLabelPrepared) => d.text)\n\n    const linkLabelGroupsEnter = linkLabelGroups.enter().append('g').attr('class', linkSelectors.linkLabelGroup)\n    linkLabelGroupsEnter.each((linkLabelDatum, i, elements) => {\n      const linkLabelGroup = select<SVGGElement, GraphCircleLabelPrepared>(elements[i])\n      linkLabelGroup.append('rect').attr('class', linkSelectors.linkLabelBackground)\n\n      const linkLabelText = linkLabelDatum ? linkLabelDatum.text?.toString() : undefined\n      const shouldRenderUseElement = isInternalHref(linkLabelText)\n      linkLabelGroup.select<SVGTextElement>(`.${linkSelectors.linkLabelContent}`).remove()\n      linkLabelGroup\n        .append(shouldRenderUseElement ? 'use' : 'text')\n        .attr('class', linkSelectors.linkLabelContent)\n    })\n    linkLabelGroupsEnter.style('opacity', 0)\n\n    const linkLabelGroupsMerged = linkLabelGroups.merge(linkLabelGroupsEnter)\n    const linkLabelMargin = 1\n    let linkLabelShiftCumulative = -sum(linkLabelsDataPrepared, d => d._backgroundWidth + linkLabelMargin) / 2 // Centering the labels\n    const cachedLinkPathLength = linkPathLengthMap.get(linkPathElement.getAttribute('d'))\n    const pathLength = cachedLinkPathLength ?? linkPathElement.getTotalLength()\n    const linkArrowStyle = getLinkArrowStyle(d, config)\n    linkLabelGroupsMerged.each((linkLabelDatum, i, elements) => {\n      const element = elements[i]\n      const linkLabelGroup = select<SVGGElement, GraphCircleLabelPrepared>(element)\n      const linkLabelText = linkLabelDatum.text?.toString()\n      const linkLabelContent = linkLabelGroup.select<SVGTextElement | SVGUseElement>(`.${linkSelectors.linkLabelContent}`)\n      const linkMarkerWidth = linkArrowStyle ? LINK_MARKER_WIDTH * 2 : 0\n      const linkLabelShift = getBoolean(d, linkLabelShiftFromCenter, d._indexGlobal) ? -linkMarkerWidth + 4 : 0\n      const linkLabelPos = linkPathElement.getPointAtLength(pathLength / 2 + linkLabelShift + linkLabelShiftCumulative + linkLabelDatum._backgroundWidth / 2)\n      const linkLabelTranslate = `translate(${linkLabelPos.x}, ${linkLabelPos.y})`\n      const linkLabelBackground = linkLabelGroup.select<SVGRectElement>(`.${linkSelectors.linkLabelBackground}`)\n\n      // If the label was not displayed before, we set the initial transform\n      if (!linkLabelGroup.attr('transform')) {\n        linkLabelGroup.attr('transform', `${linkLabelTranslate} scale(0)`)\n      }\n\n      const linkLabelColor = linkLabelDatum.textColor ?? getLinkLabelTextColor(linkLabelDatum)\n      if (linkLabelDatum._shouldRenderUseElement) {\n        linkLabelContent\n          .attr('href', linkLabelText)\n          .attr('x', -linkLabelDatum._fontSizePx / 2)\n          .attr('y', -linkLabelDatum._fontSizePx / 2)\n          .attr('width', linkLabelDatum._fontSizePx)\n          .attr('height', linkLabelDatum._fontSizePx)\n          .style('fill', linkLabelColor)\n      } else {\n        linkLabelContent\n          .text(linkLabelText)\n          .attr('dy', '0.1em')\n          .style('font-size', linkLabelDatum._fontSizePx)\n          .style('fill', linkLabelColor)\n      }\n\n      linkLabelGroup.attr('hidden', null)\n        .style('cursor', linkLabelDatum.cursor)\n\n      smartTransition(linkLabelGroup, duration)\n        .attr('transform', `${linkLabelTranslate} scale(1)`)\n        .style('opacity', 1)\n\n      linkLabelBackground\n        .attr('x', -linkLabelDatum._backgroundWidth / 2)\n        .attr('y', -linkLabelDatum._backgroundHeight / 2)\n        .attr('width', linkLabelDatum._backgroundWidth)\n        .attr('height', linkLabelDatum._backgroundHeight)\n        .attr('rx', linkLabelDatum._borderRadius)\n        .style('fill', linkLabelDatum.color)\n\n      linkLabelShiftCumulative += linkLabelDatum._backgroundWidth + linkLabelMargin\n    })\n\n    smartTransition(linkLabelGroups.exit(), duration)\n      .style('opacity', 0)\n      .remove()\n  })\n\n  // Pointer Events\n  if (duration > 0) {\n    selection.attr('pointer-events', 'none')\n    const t = smartTransition(selection, duration) as Transition<SVGGElement, GraphLink<N, L>, SVGGElement, GraphLink<N, L>>\n    t\n      .attr('opacity', 1)\n      .on('end interrupt', (d, i, elements) => {\n        select(elements[i])\n          .attr('pointer-events', 'stroke')\n          .attr('opacity', 1)\n      })\n  } else {\n    selection.attr('opacity', 1)\n  }\n\n  updateLinksPartial(selection, config, scale)\n}\n\nexport function removeLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  duration: number\n): void {\n  smartTransition(selection, duration / 2)\n    .attr('opacity', 0)\n    .remove()\n}\n\nexport function animateLinkFlow<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number,\n  linkPathLengthMap: Map<string, number>\n): void {\n  const { linkFlow } = config\n  if (scale < ZoomLevel.Level2) return\n\n  selection.each((d, i, elements) => {\n    const element = elements[i]\n    const linkGroup = select(element)\n    const flowGroup = linkGroup.select(`.${linkSelectors.flowGroup}`)\n\n    const linkPathElement = linkGroup.select<SVGPathElement>(`.${linkSelectors.linkSupport}`).node()\n    const cachedLinkPathLength = linkPathLengthMap.get(linkPathElement.getAttribute('d'))\n    const pathLength = cachedLinkPathLength ?? linkPathElement.getTotalLength()\n\n    if (!getBoolean(d, linkFlow, d._indexGlobal) || !pathLength) return\n    const t = d._state.flowAnimTime\n    const circles = flowGroup.selectAll(`.${linkSelectors.flowCircle}`)\n\n    circles\n      .attr('transform', index => {\n        const tt = (t + (+index) / (circles.size() - 1)) % 1\n        const p = linkPathElement.getPointAtLength(tt * pathLength)\n        return `translate(${p.x}, ${p.y})`\n      })\n  })\n}\n\nexport function zoomLinks<N extends GraphInputNode, L extends GraphInputLink> (\n  selection: Selection<SVGGElement, GraphLink<N, L>, SVGGElement, unknown>,\n  config: GraphConfigInterface<N, L>,\n  scale: number\n): void {\n  const { linkFlowParticleSize } = config\n\n  selection.classed(generalSelectors.zoomOutLevel2, scale < ZoomLevel.Level2)\n\n  selection.select(`.${linkSelectors.flowGroup}`)\n    .style('opacity', scale < ZoomLevel.Level2 ? 0 : 1)\n\n  selection.selectAll(`.${linkSelectors.flowCircle}`)\n    .attr('r', linkFlowParticleSize / scale)\n\n  const linkElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.link}`)\n  linkElements\n    .style('stroke-width', d => getLinkStrokeWidth(d, scale, config))\n\n  const linkBandElements = selection.selectAll<SVGGElement, GraphLink<N, L>>(`.${linkSelectors.linkBand}`)\n  linkBandElements\n    .style('stroke-width', d => getLinkBandWidth(d, scale, config))\n}\n\nexport const zoomLinksThrottled = throttle(zoomLinks, 500)\n\n"],"names":["linkSelectors.linkSupport","linkSelectors.link","linkSelectors.linkBand","linkSelectors.linkArrow","linkSelectors.flowGroup","linkSelectors.flowCircle","linkSelectors.greyedOutLink","linkSupport","link","linkBand","linkArrow","linkSelectors.linkDashed","flowGroup","linkSelectors.linkLabelGroup","linkSelectors.linkLabelBackground","linkSelectors.linkLabelContent","linkLabelContent","linkLabelBackground","generalSelectors.zoomOutLevel2"],"mappings":"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"}